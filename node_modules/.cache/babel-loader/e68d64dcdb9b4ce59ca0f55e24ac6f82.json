{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guilherme.rossan\\\\Desktop\\\\react\\\\todolist\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // Consumir API\n\nimport axios from 'axios'; // Gerador de id\n\nimport { v4 as uuidv4 } from 'uuid'; // Rotas\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport Header from './components/Header';\nimport TaskDetails from './components/TaskDetails';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [task, setTask] = useState([{\n    id: \"1\",\n    title: \"Estudar Programação\",\n    completed: false\n  }, {\n    id: \"2\",\n    title: \"Ler Livros\",\n    completed: true\n  }]);\n  const [editTask, setEditTask] = useState(null); // Chamando uma API\n\n  useEffect(() => {\n    const fecthTasks = async () => {\n      const {\n        data\n      } = await axios.get('https://jsonplaceholder.cypress.io/todos?_limit=10');\n      setTask(data);\n    };\n\n    fecthTasks();\n  }, []); // Alterando o completed do state task\n\n  const handdleTaskClick = taskId => {\n    const newTasks = task.map(task => {\n      if (task.id === taskId) return { ...task,\n        completed: !task.completed\n      };\n      return task;\n    });\n    setTask(newTasks);\n  }; // Adicionando itens no state task\n\n\n  const hangleTaskAddition = taskTittle => {\n    if (!editTask) {\n      const newTasks = [...task, {\n        title: taskTittle,\n        id: uuidv4(),\n        completed: false\n      }];\n      setTask(newTasks);\n    } else {\n      setEditTask;\n    }\n  }; // Removendo itens do state task\n\n\n  const handdleRemoveTask = taskId => {\n    // Primeiro modo encontrar a posição e depois excluir no método splice e atualizar o state\n    // const position = task.findIndex(x=>x.id == taskId);\n    // const newTask = [...task];\n    // newTask.splice(position,1);\n    // Segundo modo, fazer um filtro passando a igualdade , se for diferente do que está procurando ele vai mostrar todos. \n    const newTask = task.filter(task => task.id !== taskId);\n    setTask(newTask);\n  }; // Editar\n\n\n  const handleTaskEdit = taskId => {\n    const findId = task.find(task => task.id === taskId);\n    setEditTask(findId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(AddTask, {\n            hangleTaskAddition: hangleTaskAddition,\n            editTask: editTask,\n            setEditTask: setEditTask,\n            task: task,\n            setTask: setTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: task,\n            handdleTaskClick: handdleTaskClick,\n            handdleRemoveTask: handdleRemoveTask,\n            handleTaskEdit: handleTaskEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), console.log(editTask)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:taskTitle\",\n        exact: true,\n        component: TaskDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"h6SenmCveuVJl0AxFMWkP8A8bOk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/guilherme.rossan/Desktop/react/todolist/src/App.jsx"],"names":["React","useEffect","useState","axios","v4","uuidv4","BrowserRouter","Router","Route","Tasks","AddTask","Header","TaskDetails","App","task","setTask","id","title","completed","editTask","setEditTask","fecthTasks","data","get","handdleTaskClick","taskId","newTasks","map","hangleTaskAddition","taskTittle","handdleRemoveTask","newTask","filter","handleTaskEdit","findId","find","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B,C,CACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,WAAP;;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBb,QAAQ,CAAC,CAC9B;AACEc,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,KAAK,EAAE,qBAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GAD8B,EAM9B;AACEF,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,KAAK,EAAE,YAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GAN8B,CAAD,CAA/B;AAaA,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBlB,QAAQ,CAAC,IAAD,CAAvC,CAdc,CAgBd;;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMoB,UAAU,GAAG,YAAW;AAC5B,YAAM;AAACC,QAAAA;AAAD,UAAS,MAAMnB,KAAK,CAACoB,GAAN,CAAU,oDAAV,CAArB;AACAR,MAAAA,OAAO,CAACO,IAAD,CAAP;AACD,KAHD;;AAIAD,IAAAA,UAAU;AACb,GANQ,EAMP,EANO,CAAT,CAjBc,CAyBd;;AACA,QAAMG,gBAAgB,GAAIC,MAAD,IAAW;AAClC,UAAMC,QAAQ,GAAGZ,IAAI,CAACa,GAAL,CAASb,IAAI,IAAI;AAChC,UAAGA,IAAI,CAACE,EAAL,KAAYS,MAAf,EAAuB,OAAM,EAAC,GAAIX,IAAL;AAAWI,QAAAA,SAAS,EAAE,CAACJ,IAAI,CAACI;AAA5B,OAAN;AAEvB,aAAOJ,IAAP;AACD,KAJgB,CAAjB;AAMAC,IAAAA,OAAO,CAACW,QAAD,CAAP;AACD,GARD,CA1Bc,CAqCd;;;AACA,QAAME,kBAAkB,GAAIC,UAAD,IAAgB;AACzC,QAAG,CAACV,QAAJ,EAAa;AACX,YAAMO,QAAQ,GAAG,CAAC,GAAGZ,IAAJ,EAAS;AACxBG,QAAAA,KAAK,EAAEY,UADiB;AAExBb,QAAAA,EAAE,EAAEX,MAAM,EAFc;AAGxBa,QAAAA,SAAS,EAAC;AAHc,OAAT,CAAjB;AAMAH,MAAAA,OAAO,CAACW,QAAD,CAAP;AACD,KARD,MASI;AACFN,MAAAA,WAAW;AACZ;AACF,GAbD,CAtCc,CAqDd;;;AACA,QAAMU,iBAAiB,GAAIL,MAAD,IAAW;AACnC;AACE;AACA;AACA;AAEF;AACE,UAAMM,OAAO,GAAGjB,IAAI,CAACkB,MAAL,CAAYlB,IAAI,IAAGA,IAAI,CAACE,EAAL,KAAYS,MAA/B,CAAhB;AAEAV,IAAAA,OAAO,CAACgB,OAAD,CAAP;AAEH,GAXD,CAtDc,CAkEd;;;AACA,QAAME,cAAc,GAAIR,MAAD,IAAW;AAChC,UAAMS,MAAM,GAAGpB,IAAI,CAACqB,IAAL,CAAUrB,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYS,MAA9B,CAAf;AACAL,IAAAA,WAAW,CAACc,MAAD,CAAX;AACH,GAHC;;AAOF,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,MAAM,EAAE,mBAC5B;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,kBAAkB,EAAEN,kBAA7B;AAAiD,YAAA,QAAQ,EAAET,QAA3D;AAAqE,YAAA,WAAW,EAAEC,WAAlF;AAA+F,YAAA,IAAI,EAAEN,IAArG;AAA2G,YAAA,OAAO,EAAEC;AAApH;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,KAAK,EAAED,IAAd;AAAoB,YAAA,gBAAgB,EAAEU,gBAAtC;AAAwD,YAAA,iBAAiB,EAAEM,iBAA3E;AAA8F,YAAA,cAAc,EAAEG;AAA9G;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGGG,OAAO,CAACC,GAAR,CAAYlB,QAAZ,CAHH;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,KAAK,MAA/B;AAAgC,QAAA,SAAS,EAAEP;AAA3C;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3FD;;GAAMC,G;;KAAAA,G;AA6FN,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\n// Consumir API\nimport axios from 'axios';\n// Gerador de id\nimport {v4 as uuidv4} from 'uuid';\n// Rotas\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport Header from './components/Header';\nimport TaskDetails from './components/TaskDetails';\n\nimport './App.css';\n\n\nconst App = () => {\n    const [task,setTask] = useState([\n      {\n        id: \"1\",\n        title: \"Estudar Programação\",\n        completed: false,\n      },\n      {\n        id: \"2\",\n        title: \"Ler Livros\",\n        completed: true,\n      }\n    ]);\n\n    const [editTask,setEditTask] = useState(null);\n    \n    // Chamando uma API\n    useEffect(()=>{\n        const fecthTasks = async () =>{\n          const {data} = await axios.get('https://jsonplaceholder.cypress.io/todos?_limit=10');\n          setTask(data);\n        }\n        fecthTasks();\n    },[])\n\n    // Alterando o completed do state task\n    const handdleTaskClick = (taskId) =>{\n      const newTasks = task.map(task => {\n        if(task.id === taskId) return{... task, completed: !task.completed}\n\n        return task;\n      })\n\n      setTask(newTasks);\n    }\n\n  \n    // Adicionando itens no state task\n    const hangleTaskAddition = (taskTittle)  =>{\n      if(!editTask){\n        const newTasks = [...task,{\n          title: taskTittle,\n          id: uuidv4(),\n          completed:false,\n        }]\n\n        setTask(newTasks);\n      }\n      else{\n        setEditTask\n      }\n    }\n\n    // Removendo itens do state task\n    const handdleRemoveTask = (taskId) =>{\n      // Primeiro modo encontrar a posição e depois excluir no método splice e atualizar o state\n        // const position = task.findIndex(x=>x.id == taskId);\n        // const newTask = [...task];\n        // newTask.splice(position,1);\n        \n      // Segundo modo, fazer um filtro passando a igualdade , se for diferente do que está procurando ele vai mostrar todos. \n        const newTask = task.filter(task=> task.id !== taskId);\n\n        setTask(newTask);\n\n    }\n    // Editar\n    const handleTaskEdit = (taskId) =>{\n      const findId = task.find(task => task.id === taskId);\n      setEditTask(findId);\n  }\n\n \n\n  return(\n    <Router>\n      <div className=\"container\">\n        <Header/>\n        <Route path=\"/\" exact render={() =>(\n          <>\n            <AddTask hangleTaskAddition={hangleTaskAddition} editTask={editTask} setEditTask={setEditTask} task={task} setTask={setTask}/>\n            <Tasks tasks={task} handdleTaskClick={handdleTaskClick} handdleRemoveTask={handdleRemoveTask} handleTaskEdit={handleTaskEdit}/>\n            {console.log(editTask)}\n          </>\n        )}/>\n\n        <Route path=\"/:taskTitle\" exact component={TaskDetails}/>\n        \n      </div>\n    </Router>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}