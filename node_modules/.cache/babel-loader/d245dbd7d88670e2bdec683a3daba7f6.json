{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guilherme.rossan\\\\Desktop\\\\react\\\\todolist\\\\src\\\\components\\\\Tasks.jsx\";\nimport React from 'react';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = _ref => {\n  let {\n    tasks,\n    handdleTaskClick,\n    handdleRemoveTask,\n    editar,\n    setEditar,\n    inputData = {\n      inputData\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      inputData: inputData,\n      task: task,\n      handdleTaskClick: handdleTaskClick,\n      handdleRemoveTask: handdleRemoveTask,\n      editar: editar,\n      setEditar: setEditar\n    }, tasks.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 32\n    }, this))\n  }, void 0, false);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/Users/guilherme.rossan/Desktop/react/todolist/src/components/Tasks.jsx"],"names":["React","Task","Tasks","tasks","handdleTaskClick","handdleRemoveTask","editar","setEditar","inputData","map","task","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,MAAMC,KAAK,GAAG,QAA0F;AAAA,MAAzF;AAACC,IAAAA,KAAD;AAAQC,IAAAA,gBAAR;AAAyBC,IAAAA,iBAAzB;AAA4CC,IAAAA,MAA5C;AAAoDC,IAAAA,SAApD;AAA+DC,IAAAA,SAAS,GAAC;AAACA,MAAAA;AAAD;AAAzE,GAAyF;AACpG,sBACI;AAAA,cAEKL,KAAK,CAACM,GAAN,CAAUC,IAAI,iBAAI,QAAC,IAAD;AAAqB,MAAA,SAAS,EAAEF,SAAhC;AAA2C,MAAA,IAAI,EAAEE,IAAjD;AAAwD,MAAA,gBAAgB,EAAEN,gBAA1E;AAA4F,MAAA,iBAAiB,EAAEC,iBAA/G;AAAkI,MAAA,MAAM,EAAEC,MAA1I;AAAkJ,MAAA,SAAS,EAAEC;AAA7J,OAAWJ,KAAK,CAACQ,EAAjB;AAAA;AAAA;AAAA;AAAA,YAAlB;AAFL,mBADJ;AAMH,CAPD;;KAAMT,K;AASN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\n\r\nimport Task from './Task';\r\n\r\nconst Tasks = ({tasks, handdleTaskClick,handdleRemoveTask, editar, setEditar, inputData={inputData}}) =>{\r\n    return(\r\n        <>\r\n           \r\n            {tasks.map(task => <Task key={tasks.id} inputData={inputData} task={task}  handdleTaskClick={handdleTaskClick} handdleRemoveTask={handdleRemoveTask} editar={editar} setEditar={setEditar}/>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}