{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guilherme.rossan\\\\Desktop\\\\react\\\\todolist\\\\src\\\\components\\\\AddTask.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from './Button';\nimport './AddTask.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTask = _ref => {\n  _s();\n\n  let {\n    hangleTaskAddition,\n    editTask,\n    setEditTask,\n    task,\n    setTask\n  } = _ref;\n  const [inputData, setinputData] = useState('');\n\n  const handleInputChange = e => {\n    setinputData(e.target.value);\n  };\n\n  const updateTask = (title, id, completed) => {\n    const newTodo = task.map(task => {\n      task.id === id ? {\n        title,\n        id,\n        completed\n      } : task;\n    });\n    setTask(newTodo);\n    setEditTask('');\n  };\n\n  const handdleAddTaskClick = () => {\n    if (!editTask) {\n      hangleTaskAddition(inputData);\n      setinputData('');\n    } else {\n      updateTask(inputData, editTask.id, editTask.completed);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"add-task-input\",\n      type: \"text\",\n      value: inputData,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task-button-container\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handdleAddTaskClick,\n        children: \"Adicionar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddTask, \"6PBadgSkUiqxfIDdwC5bsajKRNQ=\");\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["C:/Users/guilherme.rossan/Desktop/react/todolist/src/components/AddTask.jsx"],"names":["React","useState","Button","AddTask","hangleTaskAddition","editTask","setEditTask","task","setTask","inputData","setinputData","handleInputChange","e","target","value","updateTask","title","id","completed","newTodo","map","handdleAddTaskClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,eAAP;;;AAEA,MAAMC,OAAO,GAAG,QAA2D;AAAA;;AAAA,MAA1D;AAACC,IAAAA,kBAAD;AAAoBC,IAAAA,QAApB;AAA6BC,IAAAA,WAA7B;AAAyCC,IAAAA,IAAzC;AAA8CC,IAAAA;AAA9C,GAA0D;AACvE,QAAK,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAAzC;;AAGA,QAAMU,iBAAiB,GAAIC,CAAD,IAAM;AAE5BF,IAAAA,YAAY,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,EAAR,EAAYC,SAAZ,KAAyB;AACxC,UAAMC,OAAO,GAAGZ,IAAI,CAACa,GAAL,CAASb,IAAI,IAAG;AAC9BA,MAAAA,IAAI,CAACU,EAAL,KAAYA,EAAZ,GAAiB;AAACD,QAAAA,KAAD;AAAOC,QAAAA,EAAP;AAAUC,QAAAA;AAAV,OAAjB,GAAwCX,IAAxC;AACD,KAFe,CAAhB;AAGAC,IAAAA,OAAO,CAACW,OAAD,CAAP;AACAb,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GANH;;AAQA,QAAMe,mBAAmB,GAAG,MAAK;AAC7B,QAAG,CAAChB,QAAJ,EAAa;AACTD,MAAAA,kBAAkB,CAACK,SAAD,CAAlB;AACAC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,KAHH,MAKM;AACAK,MAAAA,UAAU,CAACN,SAAD,EAAWJ,QAAQ,CAACY,EAApB,EAAuBZ,QAAQ,CAACa,SAAhC,CAAV;AACH;AAEN,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACQ;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAkC,MAAA,IAAI,EAAC,MAAvC;AAA8C,MAAA,KAAK,EAAET,SAArD;AAAgE,MAAA,QAAQ,EAAEE;AAA1E;AAAA;AAAA;AAAA;AAAA,YADR,eAEI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEU,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CArCD;;GAAMlB,O;;KAAAA,O;AAuCN,eAAeA,OAAf","sourcesContent":["import React,{useState} from 'react';\r\n\r\nimport Button from './Button';\r\nimport './AddTask.css';\r\n\r\nconst AddTask = ({hangleTaskAddition,editTask,setEditTask,task,setTask}) =>{\r\n    const[inputData, setinputData] = useState('');\r\n\r\n    \r\n    const handleInputChange = (e) =>{\r\n        \r\n        setinputData(e.target.value);\r\n    }\r\n\r\n    const updateTask = (title, id, completed) =>{\r\n        const newTodo = task.map(task =>{\r\n          task.id === id ? {title,id,completed} : task\r\n        })\r\n        setTask(newTodo);\r\n        setEditTask('');\r\n      }\r\n\r\n    const handdleAddTaskClick = () =>{\r\n        if(!editTask){\r\n            hangleTaskAddition(inputData);\r\n            setinputData('');\r\n          }\r\n    \r\n          else{\r\n              updateTask(inputData,editTask.id,editTask.completed)\r\n          }\r\n\r\n    }\r\n  \r\n    return(\r\n        <div className='add-task-container'>\r\n                <input className=\"add-task-input\" type=\"text\" value={inputData} onChange={handleInputChange}/>\r\n            <div className=\"add-task-button-container\">\r\n                <Button onClick={handdleAddTaskClick}>Adicionar</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTask;"]},"metadata":{},"sourceType":"module"}